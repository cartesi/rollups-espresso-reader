services:
  db:
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: rollupsdb
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "postgres", "-d", "rollupsdb"]
      interval: 10s
      timeout: 5s
      retries: 5
  devnet:
    build:
      context: ./ci/devnet
      dockerfile: Dockerfile
    ports:
      - 8545:8545
  espresso-dev-node:
    image: ghcr.io/espressosystems/espresso-sequencer/espresso-dev-node:20250428-dev-node-decaf-pos
    ports:
      - 24000:24000
      - 23000:23000
      - 20000:20000
      # - 5433:5432
    environment:
      - ESPRESSO_BUILDER_PORT=23000
      - ESPRESSO_DEPLOYER_ACCOUNT_INDEX
      - ESPRESSO_DEV_NODE_PORT=20000
      - ESPRESSO_SEQUENCER_API_PORT=24000
      - ESPRESSO_SEQUENCER_ETH_MNEMONIC
      - ESPRESSO_SEQUENCER_L1_PROVIDER=http://host.docker.internal:8545
      - ESPRESSO_SEQUENCER_DATABASE_MAX_CONNECTIONS=25
      - ESPRESSO_SEQUENCER_STORAGE_PATH=/data/espresso
      - RUST_LOG=info
      - RUST_LOG_FORMAT
    volumes:
      - espresso_storage:/data/espresso
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - devnet
    healthcheck:
      interval: 1s
      timeout: 1s
      retries: 200
      start_period: 10s
  cartesi_node_espresso:
    build:
      context: .
      dockerfile: ./ci/Dockerfile
      args:
        - ROLLUPS_NODE_VERSION=2.0.0-alpha.4
    env_file:
      - "${NODE_ENV_FILE:-./ci/env.nodev2-local}"
    ports:
      - 10000:10000
      - 10011:10011
      - 10012:10012
      - "${ESPRESSO_READER_PORT:-8080}:8080"
    depends_on:
      db:
        condition: service_healthy
    # NOTE: not explicitly depending on `espresso-dev-node` because testnet execution doesn't need it
    #       health check being done manually in ./ci/espresso-dev-node-health.sh
    #   espresso-dev-node:
    #     condition: service_healthy

volumes:
  espresso_storage: