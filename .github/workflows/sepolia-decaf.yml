name: Sepolia and Decaf

on: push

permissions:
  contents: write

env:
  ROLLUPS_NODE_VERSION: 2.0.0-alpha.4
  ESPRESSO_BASE_URL: http://localhost:24000

jobs:
  e2e_tests:
    name: e2e tests Sepolia and Decaf
    runs-on: ubuntu-latest
    env:
      NODE_ENV_FILE: "./ci/env.nodev2-sepolia-decaf"
      CARTESI_FEATURE_ESPRESSO_READER_ENABLED: true
      COMPOSE_BAKE: true
      SENDER_PRIVATE_KEY: ${{ secrets.SENDER_PRIVATE_KEY }}
      RPC_URL: ${{ secrets.CARTESI_BLOCKCHAIN_HTTP_ENDPOINT }}
      APPLICATION_ADDRESS: "0x21EF997AEa1A861c349Bd12d643701143495d158"
      INPUT_BOX_ADDRESS: "0xB6b39Fb3dD926A9e3FBc7A129540eEbeA3016a6c"
      CARTESI_AUTH_MNEMONIC: ${{ secrets.CARTESI_AUTH_MNEMONIC }}
      CARTESI_BLOCKCHAIN_WS_ENDPOINT: ${{ secrets.CARTESI_BLOCKCHAIN_WS_ENDPOINT }}
      CARTESI_BLOCKCHAIN_HTTP_ENDPOINT: ${{ secrets.CARTESI_BLOCKCHAIN_HTTP_ENDPOINT }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build docker compose
        run: |
          docker compose build

      - name: Pull docker compose
        run: |
          docker compose pull

      - name: Run docker compose
        run: |
          docker compose up cartesi_node_espresso db --wait

      - name: Redeploy Echo Dapp
        run: |
          docker compose exec cartesi_node_espresso cartesi-rollups-cli app register -v \
            -c 0xDa3d0547bB1AAa4feBb7599b8ad1871B15dF45bb \
            -a $APPLICATION_ADDRESS \
            -n echo-dapp \
            -t applications/echo-dapp/
          sleep 10
          docker compose logs --timestamps cartesi_node_espresso

      - name: Send L1 InputBox transaction
        env:
          INPUT: "0xdead01beef"
        run: |
          cast send \
              --private-key "${SENDER_PRIVATE_KEY}" \
              --rpc-url "${RPC_URL}" \
              $INPUT_BOX_ADDRESS "addInput(address,bytes)(bytes32)" $APPLICATION_ADDRESS $INPUT

      - name: Checkout nonodo
        uses: actions/checkout@v4
        with:
          repository: Calindra/nonodo
          submodules: recursive
          path: ./nonodo

      - name: Send L2 EIP 712 transaction
        working-directory: ./nonodo/eip712-client-js
        env:
          TRANSACTION_BASE_URL: http://localhost:8080
          INPUT: "0xdeadbeefdeadbeef"
        run: |
          npm i
          APP_ADDRESS=${APPLICATION_ADDRESS} node index.js || true
          sleep 10

      - name: Cartesi node Espresso logs
        run: docker compose logs --timestamps cartesi_node_espresso

      - name: Espresso dev node logs
        run: docker compose logs --timestamps espresso-dev-node

      - name: Query Database for Output
        run: |
          MAX_RETRIES=30
          for i in $(seq 1 $MAX_RETRIES); do
            RESULT=$(docker compose exec db psql -U postgres -d rollupsdb -t -c "SELECT * FROM public.output;")
            # if [[ "$RESULT" =~ "dead01beef" && "$RESULT" =~ "deadbeefdeadbeef" ]]; then
            if [[ "$RESULT" =~ "deadbeef" ]]; then
              echo "Result found: $RESULT"
              exit 0
            fi
            echo "Result: $RESULT"
            echo "Waiting for result... attempt $i"
            sleep 5
          done
          echo "Timeout reached: result not found"
          docker compose logs --timestamps cartesi_node_espresso
          exit 1

