name: CI with PostgreSQL

on: push

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

env:
  ROLLUPS_NODE_VERSION: 2.0.0-alpha.4
  ESPRESSO_BASE_URL: http://localhost:24000

jobs:
  local_e2e_test:
    name: e2e tests (Espresso Local)
    runs-on: ubuntu-latest
    env:
      CARTESI_FEATURE_ESPRESSO_READER_ENABLED: true
      COMPOSE_BAKE: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build docker compose
        run: |
          docker compose build

      - name: Run docker compose
        run: |
          docker compose up --wait

      - name: Deploy Echo Dapp
        env:
          ACCOUNT: "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"
          PRIVATE_KEY: "ac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80"
          RPC_URL: "http://localhost:8545"
        run: |
          docker compose exec cartesi_node_espresso cartesi-rollups-cli app deploy -n echo-dapp -t applications/echo-dapp/ -v -D 0x8579fd0c000000000000000000000000b6b39fb3dd926a9e3fbc7a129540eebea3016a6c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d903
          sleep 10
          docker compose logs --timestamps cartesi_node_espresso

      - name: Send L1 InputBox transaction
        env:
          INPUT: "0xdead01beef"
          INPUT_BOX_ADDRESS: "0xB6b39Fb3dD926A9e3FBc7A129540eEbeA3016a6c"
          APPLICATION_ADDRESS: "0x01e800bbE852aeb27cE65604709134Ea63782c6B"
        run: |
          cast send \
              --mnemonic "test test test test test test test test test test test junk" \
              --rpc-url "http://localhost:8545" \
              $INPUT_BOX_ADDRESS "addInput(address,bytes)(bytes32)" $APPLICATION_ADDRESS $INPUT

      - name: Checkout nonodo
        uses: actions/checkout@v4
        with:
          repository: Calindra/nonodo
          submodules: recursive
          path: ./nonodo

      - name: Send L2 EIP 712 transaction
        working-directory: ./nonodo/eip712-client-js
        env:
          SENDER_PRIVATE_KEY: ${{ secrets.SENDER_PRIVATE_KEY }}
          TRANSACTION_BASE_URL: http://localhost:8080
          APP_ADDRESS: "0x01e800bbE852aeb27cE65604709134Ea63782c6B"
          INPUT: "0xdeadbeefdeadbeef"
        run: |
          npm i
          node index.js || true
          sleep 10

      - name: Cartesi node Espresso logs
        run: docker compose logs --timestamps cartesi_node_espresso

      - name: Espresso dev node logs
        run: docker compose logs --timestamps espresso-dev-node

      - name: Query Database for Output
        run: |
          MAX_RETRIES=30
          for i in $(seq 1 $MAX_RETRIES); do
            RESULT=$(docker compose exec db psql -U postgres -d rollupsdb -t -c "SELECT * FROM public.output;")
            if [[ "$RESULT" =~ "dead01beef" && "$RESULT" =~ "deadbeefdeadbeef" ]]; then
              echo "Result found: $RESULT"
              exit 0
            fi
            echo "Result: $RESULT"
            echo "Waiting for result... attempt $i"
            sleep 5
          done
          echo "Timeout reached: result not found"
          docker compose logs --timestamps cartesi_node_espresso
          exit 1

      - name: Copy binaries
        run: |
          docker compose cp cartesi_node_espresso:/usr/bin/cartesi-machine .
          docker compose cp cartesi_node_espresso:/usr/bin/cartesi-machine-stored-hash .
          docker compose cp cartesi_node_espresso:/usr/bin/cartesi-rollups-advancer .
          docker compose cp cartesi_node_espresso:/usr/bin/cartesi-rollups-claimer .
          docker compose cp cartesi_node_espresso:/usr/bin/cartesi-rollups-cli .
          docker compose cp cartesi_node_espresso:/usr/bin/cartesi-rollups-espresso-reader .
          docker compose cp cartesi_node_espresso:/usr/bin/cartesi-rollups-evm-reader .
          docker compose cp cartesi_node_espresso:/usr/bin/cartesi-rollups-node .
          docker compose cp cartesi_node_espresso:/usr/bin/cartesi-rollups-validator .
          ls -la

      - name: Upload binaries as artifact
        uses: actions/upload-artifact@v4
        with:
          name: cartesi-binaries
          path: cartesi-*

  integration_test:
    name: Integration tests (Local Espresso Dev Node)
    runs-on: ubuntu-latest
    env:
      CARTESI_FEATURE_ESPRESSO_READER_ENABLED: false
      ESPRESSO_READER_PORT: 8081
      COMPOSE_BAKE: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build docker compose
        run: |
          docker compose build

      - name: Run docker compose
        run: |
          docker compose up --wait

      - name: Wait for Espresso dev node to be available
        run: |
          ./ci/scripts/espresso-dev-node-health.sh
          docker ps

      - name: Espresso dev node logs
        run: |
          docker compose logs --timestamps espresso-dev-node

      - name: Install Echo App
        run: |
          docker compose logs --timestamps cartesi_node_espresso
          docker compose exec cartesi_node_espresso cartesi-rollups-cli app deploy -n echo-dapp -t applications/echo-dapp/ -D 0x8579fd0c000000000000000000000000b6b39fb3dd926a9e3fbc7a129540eebea3016a6c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d903

      - name: Run integration tests
        env:
          CARTESI_AUTH_MNEMONIC: "test test test test test test test test test test test junk"
          CARTESI_BLOCKCHAIN_HTTP_ENDPOINT: http://localhost:8545
          CARTESI_BLOCKCHAIN_WS_ENDPOINT: ws://localhost:8545
          CARTESI_BLOCKCHAIN_ID: 13370
          CARTESI_CONTRACTS_INPUT_BOX_ADDRESS: "0xB6b39Fb3dD926A9e3FBc7A129540eEbeA3016a6c"
          CARTESI_CONTRACTS_AUTHORITY_FACTORY_ADDRESS: "0x451f57Ca716046D114Ab9ff23269a2F9F4a1bdaF"
          CARTESI_CONTRACTS_APPLICATION_FACTORY_ADDRESS: "0x2210ad1d9B0bD2D470c2bfA4814ab6253BC421A0"
          CARTESI_CONTRACTS_SELF_HOSTED_APPLICATION_FACTORY_ADDRESS: "0x4a409e1CaB9229711C4e1f68625DdbC75809e721"
          CARTESI_DATABASE_CONNECTION: "postgres://postgres:password@localhost:5432/rollupsdb?sslmode=disable"
          ESPRESSO_BASE_URL: "http://localhost:24000"
          ESPRESSO_SERVICE_ENDPOINT: "0.0.0.0:8080"
          CARTESI_FEATURE_MACHINE_HASH_CHECK_ENABLED: false
          CARTESI_FEATURE_INPUT_READER_ENABLED: false
        run: |
          echo "chain id = $CARTESI_BLOCKCHAIN_ID"
          go test -v --timeout 10m -p 1 ./...

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [integration_test, local_e2e_test]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      # TODO: remove in the future unrelated binaries.
      - name: Download binaries artifact
        uses: actions/download-artifact@v4
        with:
          name: cartesi-binaries

      - name: Publish Github release
        uses: softprops/action-gh-release@v2
        with:
          prerelease: true
          body_path: CHANGELOG.md

          files: |
            cartesi-*

  releases-matrix:
    name: Build binaries for release
    runs-on: ubuntu-latest
    needs: [release]
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64, riscv64]
        exclude:
          - goarch: arm64
            goos: windows
          - goarch: riscv64
            goos: windows
          - goarch: riscv64
            goos: darwin
    steps:
      - uses: actions/checkout@v4

      - uses: wangyoucao577/go-release-action@v1
        with:
          overwrite: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          extra_files: CHANGELOG.md LICENSE README.md
          binary_name: cartesi-rollups-espresso-reader
